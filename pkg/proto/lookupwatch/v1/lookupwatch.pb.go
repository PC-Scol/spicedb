// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: lookupwatch/v1/lookupwatch.proto

package lookupwatchv1

import (
	v1 "github.com/authzed/authzed-go/proto/authzed/api/v1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WatchAccessibleResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceObjectType      string       `protobuf:"bytes,1,opt,name=resource_object_type,json=resourceObjectType,proto3" json:"resource_object_type,omitempty"`
	Permission              string       `protobuf:"bytes,2,opt,name=permission,proto3" json:"permission,omitempty"`
	SubjectObjectType       string       `protobuf:"bytes,3,opt,name=subject_object_type,json=subjectObjectType,proto3" json:"subject_object_type,omitempty"`
	OptionalSubjectRelation string       `protobuf:"bytes,4,opt,name=optional_subject_relation,json=optionalSubjectRelation,proto3" json:"optional_subject_relation,omitempty"`
	OptionalStartTimestamp  *v1.ZedToken `protobuf:"bytes,5,opt,name=optional_start_timestamp,json=optionalStartTimestamp,proto3" json:"optional_start_timestamp,omitempty"`
}

func (x *WatchAccessibleResourcesRequest) Reset() {
	*x = WatchAccessibleResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lookupwatch_v1_lookupwatch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchAccessibleResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAccessibleResourcesRequest) ProtoMessage() {}

func (x *WatchAccessibleResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lookupwatch_v1_lookupwatch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAccessibleResourcesRequest.ProtoReflect.Descriptor instead.
func (*WatchAccessibleResourcesRequest) Descriptor() ([]byte, []int) {
	return file_lookupwatch_v1_lookupwatch_proto_rawDescGZIP(), []int{0}
}

func (x *WatchAccessibleResourcesRequest) GetResourceObjectType() string {
	if x != nil {
		return x.ResourceObjectType
	}
	return ""
}

func (x *WatchAccessibleResourcesRequest) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *WatchAccessibleResourcesRequest) GetSubjectObjectType() string {
	if x != nil {
		return x.SubjectObjectType
	}
	return ""
}

func (x *WatchAccessibleResourcesRequest) GetOptionalSubjectRelation() string {
	if x != nil {
		return x.OptionalSubjectRelation
	}
	return ""
}

func (x *WatchAccessibleResourcesRequest) GetOptionalStartTimestamp() *v1.ZedToken {
	if x != nil {
		return x.OptionalStartTimestamp
	}
	return nil
}

type PermissionUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject           *v1.SubjectReference                      `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Resource          *v1.ObjectReference                       `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	UpdatedPermission v1.CheckPermissionResponse_Permissionship `protobuf:"varint,3,opt,name=updated_permission,json=updatedPermission,proto3,enum=authzed.api.v1.CheckPermissionResponse_Permissionship" json:"updated_permission,omitempty"`
}

func (x *PermissionUpdate) Reset() {
	*x = PermissionUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lookupwatch_v1_lookupwatch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionUpdate) ProtoMessage() {}

func (x *PermissionUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lookupwatch_v1_lookupwatch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionUpdate.ProtoReflect.Descriptor instead.
func (*PermissionUpdate) Descriptor() ([]byte, []int) {
	return file_lookupwatch_v1_lookupwatch_proto_rawDescGZIP(), []int{1}
}

func (x *PermissionUpdate) GetSubject() *v1.SubjectReference {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *PermissionUpdate) GetResource() *v1.ObjectReference {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *PermissionUpdate) GetUpdatedPermission() v1.CheckPermissionResponse_Permissionship {
	if x != nil {
		return x.UpdatedPermission
	}
	return v1.CheckPermissionResponse_Permissionship(0)
}

type WatchAccessibleResourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updates        []*PermissionUpdate `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
	ChangesThrough *v1.ZedToken        `protobuf:"bytes,2,opt,name=changes_through,json=changesThrough,proto3" json:"changes_through,omitempty"`
}

func (x *WatchAccessibleResourcesResponse) Reset() {
	*x = WatchAccessibleResourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lookupwatch_v1_lookupwatch_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchAccessibleResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAccessibleResourcesResponse) ProtoMessage() {}

func (x *WatchAccessibleResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lookupwatch_v1_lookupwatch_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAccessibleResourcesResponse.ProtoReflect.Descriptor instead.
func (*WatchAccessibleResourcesResponse) Descriptor() ([]byte, []int) {
	return file_lookupwatch_v1_lookupwatch_proto_rawDescGZIP(), []int{2}
}

func (x *WatchAccessibleResourcesResponse) GetUpdates() []*PermissionUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *WatchAccessibleResourcesResponse) GetChangesThrough() *v1.ZedToken {
	if x != nil {
		return x.ChangesThrough
	}
	return nil
}

var File_lookupwatch_v1_lookupwatch_proto protoreflect.FileDescriptor

var file_lookupwatch_v1_lookupwatch_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x76, 0x31,
	0x2f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e,
	0x76, 0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61, 0x75, 0x74,
	0x68, 0x7a, 0x65, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb3, 0x02, 0x0a, 0x1f, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x52, 0x0a, 0x18, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x5a, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x16, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xf2, 0x01, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a,
	0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa1, 0x01, 0x0a, 0x20, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x5a, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0e,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x32, 0x98,
	0x01, 0x0a, 0x12, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x18, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x12, 0x2f, 0x2e, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0xc2, 0x01, 0x0a, 0x12, 0x63, 0x6f,
	0x6d, 0x2e, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x76, 0x31,
	0x42, 0x10, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x77, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x65, 0x64, 0x2f, 0x73, 0x70, 0x69, 0x63, 0x65, 0x64, 0x62,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x76, 0x31, 0x3b, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4c, 0x58, 0x58, 0xaa, 0x02, 0x0e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x0e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x1a, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x77, 0x61, 0x74, 0x63, 0x68, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lookupwatch_v1_lookupwatch_proto_rawDescOnce sync.Once
	file_lookupwatch_v1_lookupwatch_proto_rawDescData = file_lookupwatch_v1_lookupwatch_proto_rawDesc
)

func file_lookupwatch_v1_lookupwatch_proto_rawDescGZIP() []byte {
	file_lookupwatch_v1_lookupwatch_proto_rawDescOnce.Do(func() {
		file_lookupwatch_v1_lookupwatch_proto_rawDescData = protoimpl.X.CompressGZIP(file_lookupwatch_v1_lookupwatch_proto_rawDescData)
	})
	return file_lookupwatch_v1_lookupwatch_proto_rawDescData
}

var file_lookupwatch_v1_lookupwatch_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_lookupwatch_v1_lookupwatch_proto_goTypes = []interface{}{
	(*WatchAccessibleResourcesRequest)(nil),        // 0: lookupwatch.v1.WatchAccessibleResourcesRequest
	(*PermissionUpdate)(nil),                       // 1: lookupwatch.v1.PermissionUpdate
	(*WatchAccessibleResourcesResponse)(nil),       // 2: lookupwatch.v1.WatchAccessibleResourcesResponse
	(*v1.ZedToken)(nil),                            // 3: authzed.api.v1.ZedToken
	(*v1.SubjectReference)(nil),                    // 4: authzed.api.v1.SubjectReference
	(*v1.ObjectReference)(nil),                     // 5: authzed.api.v1.ObjectReference
	(v1.CheckPermissionResponse_Permissionship)(0), // 6: authzed.api.v1.CheckPermissionResponse.Permissionship
}
var file_lookupwatch_v1_lookupwatch_proto_depIdxs = []int32{
	3, // 0: lookupwatch.v1.WatchAccessibleResourcesRequest.optional_start_timestamp:type_name -> authzed.api.v1.ZedToken
	4, // 1: lookupwatch.v1.PermissionUpdate.subject:type_name -> authzed.api.v1.SubjectReference
	5, // 2: lookupwatch.v1.PermissionUpdate.resource:type_name -> authzed.api.v1.ObjectReference
	6, // 3: lookupwatch.v1.PermissionUpdate.updated_permission:type_name -> authzed.api.v1.CheckPermissionResponse.Permissionship
	1, // 4: lookupwatch.v1.WatchAccessibleResourcesResponse.updates:type_name -> lookupwatch.v1.PermissionUpdate
	3, // 5: lookupwatch.v1.WatchAccessibleResourcesResponse.changes_through:type_name -> authzed.api.v1.ZedToken
	0, // 6: lookupwatch.v1.LookupWatchService.WatchAccessibleResources:input_type -> lookupwatch.v1.WatchAccessibleResourcesRequest
	2, // 7: lookupwatch.v1.LookupWatchService.WatchAccessibleResources:output_type -> lookupwatch.v1.WatchAccessibleResourcesResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_lookupwatch_v1_lookupwatch_proto_init() }
func file_lookupwatch_v1_lookupwatch_proto_init() {
	if File_lookupwatch_v1_lookupwatch_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lookupwatch_v1_lookupwatch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchAccessibleResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lookupwatch_v1_lookupwatch_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lookupwatch_v1_lookupwatch_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchAccessibleResourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lookupwatch_v1_lookupwatch_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lookupwatch_v1_lookupwatch_proto_goTypes,
		DependencyIndexes: file_lookupwatch_v1_lookupwatch_proto_depIdxs,
		MessageInfos:      file_lookupwatch_v1_lookupwatch_proto_msgTypes,
	}.Build()
	File_lookupwatch_v1_lookupwatch_proto = out.File
	file_lookupwatch_v1_lookupwatch_proto_rawDesc = nil
	file_lookupwatch_v1_lookupwatch_proto_goTypes = nil
	file_lookupwatch_v1_lookupwatch_proto_depIdxs = nil
}
