// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: reachability/v1/reachability.proto

package reachabilityv1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ReachablityServiceClient is the client API for ReachablityService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ReachablityServiceClient interface {
	ReachableResources(ctx context.Context, in *ReachableResourcesRequest, opts ...grpc.CallOption) (ReachablityService_ReachableResourcesClient, error)
}

type reachablityServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewReachablityServiceClient(cc grpc.ClientConnInterface) ReachablityServiceClient {
	return &reachablityServiceClient{cc}
}

func (c *reachablityServiceClient) ReachableResources(ctx context.Context, in *ReachableResourcesRequest, opts ...grpc.CallOption) (ReachablityService_ReachableResourcesClient, error) {
	stream, err := c.cc.NewStream(ctx, &ReachablityService_ServiceDesc.Streams[0], "/reachability.v1.ReachablityService/ReachableResources", opts...)
	if err != nil {
		return nil, err
	}
	x := &reachablityServiceReachableResourcesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ReachablityService_ReachableResourcesClient interface {
	Recv() (*ReachableResourcesResponse, error)
	grpc.ClientStream
}

type reachablityServiceReachableResourcesClient struct {
	grpc.ClientStream
}

func (x *reachablityServiceReachableResourcesClient) Recv() (*ReachableResourcesResponse, error) {
	m := new(ReachableResourcesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ReachablityServiceServer is the server API for ReachablityService service.
// All implementations must embed UnimplementedReachablityServiceServer
// for forward compatibility
type ReachablityServiceServer interface {
	ReachableResources(*ReachableResourcesRequest, ReachablityService_ReachableResourcesServer) error
	mustEmbedUnimplementedReachablityServiceServer()
}

// UnimplementedReachablityServiceServer must be embedded to have forward compatible implementations.
type UnimplementedReachablityServiceServer struct {
}

func (UnimplementedReachablityServiceServer) ReachableResources(*ReachableResourcesRequest, ReachablityService_ReachableResourcesServer) error {
	return status.Errorf(codes.Unimplemented, "method ReachableResources not implemented")
}
func (UnimplementedReachablityServiceServer) mustEmbedUnimplementedReachablityServiceServer() {}

// UnsafeReachablityServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ReachablityServiceServer will
// result in compilation errors.
type UnsafeReachablityServiceServer interface {
	mustEmbedUnimplementedReachablityServiceServer()
}

func RegisterReachablityServiceServer(s grpc.ServiceRegistrar, srv ReachablityServiceServer) {
	s.RegisterService(&ReachablityService_ServiceDesc, srv)
}

func _ReachablityService_ReachableResources_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReachableResourcesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ReachablityServiceServer).ReachableResources(m, &reachablityServiceReachableResourcesServer{stream})
}

type ReachablityService_ReachableResourcesServer interface {
	Send(*ReachableResourcesResponse) error
	grpc.ServerStream
}

type reachablityServiceReachableResourcesServer struct {
	grpc.ServerStream
}

func (x *reachablityServiceReachableResourcesServer) Send(m *ReachableResourcesResponse) error {
	return x.ServerStream.SendMsg(m)
}

// ReachablityService_ServiceDesc is the grpc.ServiceDesc for ReachablityService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ReachablityService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "reachability.v1.ReachablityService",
	HandlerType: (*ReachablityServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReachableResources",
			Handler:       _ReachablityService_ReachableResources_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "reachability/v1/reachability.proto",
}
